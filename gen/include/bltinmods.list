/* linked-in known module `zsh/main' */
#ifdef DYNAMIC
/* non-linked-in known module `zsh/rlimits' */
  {
    char *zsh_features[] = { 
      "b:limit",
      "b:ulimit",
      "b:unlimit",
      NULL
    }; 
    char *emu_features[] = { 
      "b:ulimit",
      NULL
    }; 
    autofeatures("zsh", "zsh/rlimits",
       EMULATION(EMULATE_ZSH) ? zsh_features : emu_features,
       0, 1);
  }
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/sched' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:sched",
      "p:zsh_scheduled_events",
      NULL
    }; 
    autofeatures("zsh", "zsh/sched", features, 0, 1);
  }
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/param/private' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:private",
      NULL
    }; 
    autofeatures("zsh", "zsh/param/private", features, 0, 1);
  }
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/parameter' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "p:parameters",
      "p:commands",
      "p:functions",
      "p:dis_functions",
      "p:funcfiletrace",
      "p:funcsourcetrace",
      "p:funcstack",
      "p:functrace",
      "p:builtins",
      "p:dis_builtins",
      "p:reswords",
      "p:dis_reswords",
      "p:patchars",
      "p:dis_patchars",
      "p:options",
      "p:modules",
      "p:dirstack",
      "p:history",
      "p:historywords",
      "p:jobtexts",
      "p:jobdirs",
      "p:jobstates",
      "p:nameddirs",
      "p:userdirs",
      "p:aliases",
      "p:dis_aliases",
      "p:galiases",
      "p:dis_galiases",
      "p:saliases",
      "p:dis_saliases",
      NULL
    }; 
    autofeatures("zsh", "zsh/parameter", features, 0, 1);
  }
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/termcap' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:echotc",
      "p:termcap",
      NULL
    }; 
    autofeatures("zsh", "zsh/termcap", features, 0, 1);
  }
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/terminfo' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:echoti",
      "p:terminfo",
      NULL
    }; 
    autofeatures("zsh", "zsh/terminfo", features, 0, 1);
  }
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/zutil' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:zformat",
      "b:zstyle",
      "b:zregexparse",
      "b:zparseopts",
      NULL
    }; 
    autofeatures("zsh", "zsh/zutil", features, 0, 1);
  }
  add_dep("zsh/zutil", "zsh/complete");
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/compctl' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:compctl",
      "b:compcall",
      NULL
    }; 
    autofeatures("zsh", "zsh/compctl", features, 0, 1);
  }
  add_dep("zsh/compctl", "zsh/complete");
  add_dep("zsh/compctl", "zsh/zle");
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/complete' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:compadd",
      "b:compset",
      "c:prefix",
      "c:suffix",
      "c:between",
      "c:after",
      NULL
    }; 
    autofeatures("zsh", "zsh/complete", features, 0, 1);
  }
  add_dep("zsh/complete", "zsh/zle");
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/complist' */
  add_dep("zsh/complist", "zsh/complete");
  add_dep("zsh/complist", "zsh/zle");
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/computil' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:compdescribe",
      "b:comparguments",
      "b:compvalues",
      "b:compquote",
      "b:comptags",
      "b:comptry",
      "b:compfiles",
      "b:compgroups",
      NULL
    }; 
    autofeatures("zsh", "zsh/computil", features, 0, 1);
  }
  add_dep("zsh/computil", "zsh/complete");
  add_dep("zsh/computil", "zsh/zle");
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/zle' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "b:bindkey",
      "b:vared",
      "b:zle",
      NULL
    }; 
    autofeatures("zsh", "zsh/zle", features, 0, 1);
  }
#endif
#ifdef DYNAMIC
/* non-linked-in known module `zsh/zleparameter' */
  if (EMULATION(EMULATE_ZSH)) {
    char *features[] = { 
      "p:widgets",
      "p:keymaps",
      NULL
    }; 
    autofeatures("zsh", "zsh/zleparameter", features, 0, 1);
  }
  add_dep("zsh/zleparameter", "zsh/zle");
#endif

/* linked-in module `zsh/main' */
    {
        extern int setup_zshQsmain _((Module));
        extern int boot_zshQsmain _((Module));
        extern int features_zshQsmain _((Module,char***));
        extern int enables_zshQsmain _((Module,int**));
        extern int cleanup_zshQsmain _((Module));
        extern int finish_zshQsmain _((Module));

        register_module("zsh/main",
                        setup_zshQsmain,
                        features_zshQsmain,
                        enables_zshQsmain,
                        boot_zshQsmain,
                        cleanup_zshQsmain, finish_zshQsmain);
    }
