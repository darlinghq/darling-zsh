/* Generated automatically */
#ifndef have_Src_Zle_zle_main_globals
#define have_Src_Zle_zle_main_globals

extern mod_import_variable ZLE_STRING_T zleline;
extern mod_import_variable int zlecs;
extern mod_import_variable int zlell;
extern mod_import_variable int incompctlfunc;
extern mod_import_variable int hascompmod;
extern int zlereadflags;
extern int zlecontext;
extern int done;
extern int mark;
extern mod_import_variable int lastchar;
extern mod_import_variable ZLE_INT_T lastchar_wide;
extern mod_import_variable int lastchar_wide_valid;
extern mod_import_variable Thingy lbindk;
extern mod_import_variable Thingy bindk;
extern int insmode;
extern mod_import_variable int eofchar;
extern mod_import_variable int lastcmd;
extern mod_import_variable Widget compwidget;
extern mod_import_variable char*statusline;
extern int stackhist;
extern int stackcs;
extern zlong vistartchange;
extern mod_import_variable struct modifier zmod;
extern int prefixflag;
extern int kungetct;
extern mod_import_variable char*zlenoargs[1];
extern int nwatch;
extern Watch_fd watch_fds;
extern mod_import_function void zsetterm _((void));
extern void ungetbyte _((int ch));
extern void ungetbytes _((char*s,int len));
extern mod_import_function int getbyte _((long do_keytmout,int*timeout));
extern mod_import_function ZLE_INT_T getfullchar _((int do_keytmout));
#ifdef MULTIBYTE_SUPPORT
extern mod_import_function ZLE_INT_T getrestchar _((int inchar,char*outstr,int*outcount));
#endif
extern void zlecore _((void));
extern char*zleread _((char**lp,char**rp,int flags,int context,char*init,char*finish));
extern int execzlefunc _((Thingy func,char**args,int set_bindk));
extern mod_import_variable char*varedarg;
extern int describekeybriefly _((UNUSED(char**args)));
extern int whereis _((UNUSED(char**args)));
extern int recursiveedit _((UNUSED(char**args)));
extern void reexpandprompt _((void));
extern int resetprompt _((UNUSED(char**args)));
extern mod_import_function void zle_resetprompt _((void));
extern mod_import_function void trashzle _((void));
extern mod_import_variable struct hookdef zlehooks[];
extern int setup_ _((UNUSED(Module m)));
extern int features_ _((Module m,char***features));
extern int enables_ _((Module m,int**enables));
extern int boot_ _((Module m));
extern int cleanup_ _((Module m));
extern int finish_ _((UNUSED(Module m)));

#endif /* !have_Src_Zle_zle_main_globals */
